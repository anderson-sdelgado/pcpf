// Mocks generated by Mockito 5.4.4 from annotations
// in pcp/test/unit/presenter/mock_usecases.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pcp/domain/entities/stable/colab.dart' as _i9;
import 'package:pcp/domain/entities/stable/equip.dart' as _i13;
import 'package:pcp/domain/entities/stable/local.dart' as _i17;
import 'package:pcp/domain/entities/stable/terceiro.dart' as _i21;
import 'package:pcp/domain/entities/stable/visitante.dart' as _i25;
import 'package:pcp/domain/errors/errors.dart' as _i5;
import 'package:pcp/domain/usecases/database/add_all_colab.dart' as _i10;
import 'package:pcp/domain/usecases/database/add_all_equip.dart' as _i14;
import 'package:pcp/domain/usecases/database/add_all_local.dart' as _i18;
import 'package:pcp/domain/usecases/database/add_all_terceiro.dart' as _i22;
import 'package:pcp/domain/usecases/database/add_all_visitante.dart' as _i26;
import 'package:pcp/domain/usecases/database/delete_all_colab.dart' as _i7;
import 'package:pcp/domain/usecases/database/delete_all_equip.dart' as _i11;
import 'package:pcp/domain/usecases/database/delete_all_local.dart' as _i15;
import 'package:pcp/domain/usecases/database/delete_all_terceiro.dart' as _i19;
import 'package:pcp/domain/usecases/database/delete_all_visitante.dart' as _i23;
import 'package:pcp/domain/usecases/database/recover_all_colab.dart' as _i8;
import 'package:pcp/domain/usecases/database/recover_all_equip.dart' as _i12;
import 'package:pcp/domain/usecases/database/recover_all_local.dart' as _i16;
import 'package:pcp/domain/usecases/database/recover_all_terceiro.dart' as _i20;
import 'package:pcp/domain/usecases/database/recover_all_visitante.dart'
    as _i24;
import 'package:pcp/domain/usecases/initial/check_password_config.dart' as _i28;
import 'package:pcp/domain/usecases/initial/check_status_update_database.dart'
    as _i29;
import 'package:pcp/domain/usecases/initial/save_initial_config.dart' as _i6;
import 'package:pcp/domain/usecases/initial/send_initial_config.dart' as _i3;
import 'package:pcp/domain/usecases/initial/set_config_all_database_update.dart'
    as _i27;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SendInitialConfig].
///
/// See the documentation for Mockito's code generation for more information.
class MockSendInitialConfig extends _i1.Mock implements _i3.SendInitialConfig {
  MockSendInitialConfig() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, num>> call({
    required String? nroAparelho,
    required String? senha,
    required String? version,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #nroAparelho: nroAparelho,
            #senha: senha,
            #version: version,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, num>>.value(
            _FakeEither_0<_i5.Failure, num>(
          this,
          Invocation.method(
            #call,
            [],
            {
              #nroAparelho: nroAparelho,
              #senha: senha,
              #version: version,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, num>>);
}

/// A class which mocks [SaveInitialConfig].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveInitialConfig extends _i1.Mock implements _i6.SaveInitialConfig {
  MockSaveInitialConfig() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> call({
    required String? nroAparelho,
    required String? senha,
    required String? version,
    required num? idDB,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #nroAparelho: nroAparelho,
            #senha: senha,
            #version: version,
            #idDB: idDB,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [DeleteAllColab].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeleteAllColab extends _i1.Mock implements _i7.DeleteAllColab {
  MockDeleteAllColab() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}

/// A class which mocks [RecoverAllColab].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecoverAllColab extends _i1.Mock implements _i8.RecoverAllColab {
  MockRecoverAllColab() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i9.Colab>>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i9.Colab>>>.value(
            _FakeEither_0<_i5.Failure, List<_i9.Colab>>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i9.Colab>>>);
}

/// A class which mocks [AddAllColab].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddAllColab extends _i1.Mock implements _i10.AddAllColab {
  MockAddAllColab() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> call(List<_i9.Colab>? list) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [list],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [list],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}

/// A class which mocks [DeleteAllEquip].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeleteAllEquip extends _i1.Mock implements _i11.DeleteAllEquip {
  MockDeleteAllEquip() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}

/// A class which mocks [RecoverAllEquip].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecoverAllEquip extends _i1.Mock implements _i12.RecoverAllEquip {
  MockRecoverAllEquip() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i13.Equip>>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i13.Equip>>>.value(
                _FakeEither_0<_i5.Failure, List<_i13.Equip>>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i13.Equip>>>);
}

/// A class which mocks [AddAllEquip].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddAllEquip extends _i1.Mock implements _i14.AddAllEquip {
  MockAddAllEquip() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> call(List<_i13.Equip>? list) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [list],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [list],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}

/// A class which mocks [DeleteAllLocal].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeleteAllLocal extends _i1.Mock implements _i15.DeleteAllLocal {
  MockDeleteAllLocal() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}

/// A class which mocks [RecoverAllLocal].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecoverAllLocal extends _i1.Mock implements _i16.RecoverAllLocal {
  MockRecoverAllLocal() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i17.Local>>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i17.Local>>>.value(
                _FakeEither_0<_i5.Failure, List<_i17.Local>>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i17.Local>>>);
}

/// A class which mocks [AddAllLocal].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddAllLocal extends _i1.Mock implements _i18.AddAllLocal {
  MockAddAllLocal() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> call(List<_i17.Local>? list) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [list],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [list],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}

/// A class which mocks [DeleteAllTerceiro].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeleteAllTerceiro extends _i1.Mock implements _i19.DeleteAllTerceiro {
  MockDeleteAllTerceiro() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}

/// A class which mocks [RecoverAllTerceiro].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecoverAllTerceiro extends _i1.Mock
    implements _i20.RecoverAllTerceiro {
  MockRecoverAllTerceiro() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i21.Terceiro>>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i21.Terceiro>>>.value(
                _FakeEither_0<_i5.Failure, List<_i21.Terceiro>>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i21.Terceiro>>>);
}

/// A class which mocks [AddAllTerceiro].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddAllTerceiro extends _i1.Mock implements _i22.AddAllTerceiro {
  MockAddAllTerceiro() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> call(List<_i21.Terceiro>? list) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [list],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [list],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}

/// A class which mocks [DeleteAllVisitante].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeleteAllVisitante extends _i1.Mock
    implements _i23.DeleteAllVisitante {
  MockDeleteAllVisitante() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}

/// A class which mocks [RecoverAllVisitante].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecoverAllVisitante extends _i1.Mock
    implements _i24.RecoverAllVisitante {
  MockRecoverAllVisitante() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i25.Visitante>>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i25.Visitante>>>.value(
                _FakeEither_0<_i5.Failure, List<_i25.Visitante>>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i25.Visitante>>>);
}

/// A class which mocks [AddAllVisitante].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddAllVisitante extends _i1.Mock implements _i26.AddAllVisitante {
  MockAddAllVisitante() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> call(List<_i25.Visitante>? list) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [list],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #call,
            [list],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}

/// A class which mocks [SetConfigAllDatabaseUpdate].
///
/// See the documentation for Mockito's code generation for more information.
class MockSetConfigAllDatabaseUpdate extends _i1.Mock
    implements _i27.SetConfigAllDatabaseUpdate {
  MockSetConfigAllDatabaseUpdate() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [CheckPasswordConfig].
///
/// See the documentation for Mockito's code generation for more information.
class MockCheckPasswordConfig extends _i1.Mock
    implements _i28.CheckPasswordConfig {
  MockCheckPasswordConfig() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> call(String? senha) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [senha],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [CheckStatusUpdateDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCheckStatusUpdateDatabase extends _i1.Mock
    implements _i29.CheckStatusUpdateDatabase {
  MockCheckStatusUpdateDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
